{"version":3,"sources":["services/workouts/actions.js","services/workouts/index.js","assets/img/IndoorBike.svg","assets/img/Elliptical.svg","assets/img/IndoorRun.svg","assets/img/IndoorWalk.svg","assets/img/HIITWorkout.svg","assets/img/core.svg","assets/img/cross.svg","assets/img/pilate.svg","assets/img/kick.svg","assets/img/yoga.svg","assets/img/dance.svg","assets/img/jumping-rope.svg","assets/img/weight.svg","views/workout/index.js"],"names":["getAllWorkOuts","api","method","url","then","res","catch","err","createOrSaveWorkout","workout","id","dispatch","data","authApi","getWorkOutSessions","type","WORKOUT","WORKOUT_SESSIONS","payload","workouts","getWorkoutById","searchWorktout","keyword","cancelWorkoutSession","DELETE_SESSION","WorkoutActions","module","exports","Yup","object","string","array","number","ref","validationSchema","shape","totalUserLimit","duration","required","timezone","perUserCharge","scheduledTime","requirement","typeDetails","WORKOUT_TYPES","IndoorBike","Elliptical","IndoorRun","IndoorWalk","JumpingRope","HIITWorkout","Dance","Boxing","Kick","Weight","Core","Cross","Yoga","Pilates","Pilate","TIME_OPTIONS","label","value","TIMEZONES","CHARGE_MARKS","10","15","20","25","30","35","40","45","50","55","60","WorkoutItem","selected","onSelect","icon","title","className","onClick","src","width","WorkoutPage","props","useDispatch","workoutId","match","params","useState","loading","setLoading","saving","setSaving","selectedWorkout","setWorkout","parseInt","moment","Date","format","initialValues","setInitialValues","useEffect","disabledDate","current","endOf","style","height","color","xs","onSubmit","values","toast","success","position","POSITION","TOP_RIGHT","history","push","error","handleSubmit","handleChange","errors","touched","Object","keys","map","key","val","row","lg","name","placeholder","onChange","min","max","count","inputStyle","minWidth","border","backgroundColor","wrapperStyle","borderRadius","btnStyle","padding","onCountChange","toString","marks","defaultValue","date","console","log","showTime","options","classNamePrefix","isSearchable","filter","tz","to","disabled"],"mappings":"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","file":"static/js/4.a24e7504.chunk.js","sourcesContent":["import { WORKOUT } from \"constants/types\"\nimport { api, authApi, formData } from \"utils\"\n\n// Get Workout for Dashboard\nexport const getAllWorkOuts = () => {\n  let data = {\n    method: \"get\",\n    url: `/workouts`,\n  }\n  return api(data)\n    .then((res) => {\n      return res\n    })\n    .catch((err) => {\n      throw err\n    })\n}\n\n// Create Workout Session\nexport const createOrSaveWorkout = (workout, id) => {\n  return (dispatch) => {\n    let data = {\n      method: id ? \"put\" : \"post\",\n      url: `/workouts`,\n      data: workout,\n    }\n    return authApi(data)\n      .then((res) => {\n        return res\n      })\n      .catch((err) => {\n        throw err\n      })\n  }\n}\n\n// Get Workout Sessions\nexport const getWorkOutSessions = (id) => {\n  return (dispatch) => {\n    let data = {\n      method: \"get\",\n      url: `/workouts?personalTrainerId=${id}`,\n    }\n    return authApi(data)\n      .then((res) => {\n        dispatch({\n          type: WORKOUT.WORKOUT_SESSIONS,\n          payload: res.workouts || [],\n        })\n        return res\n      })\n      .catch((err) => {\n        throw err\n      })\n  }\n}\n\n// Get Workout By Id\nexport const getWorkoutById = (id) => {\n  return (dispatch) => {\n    let data = {\n      method: \"get\",\n      url: `/workouts/workout?workoutId=${id}`,\n    }\n    return authApi(data)\n      .then((res) => {\n        return res\n      })\n      .catch((err) => {\n        throw err\n      })\n  }\n}\n\n\n// Search Workout\nexport const searchWorktout = (keyword) => {\n  return (dispatch) => {\n    let data = {\n      method: \"get\",\n      url: `/workouts/workout?workoutId=${keyword}`,\n    }\n    return authApi(data)\n      .then((res) => {\n        return res\n      })\n      .catch((err) => {\n        throw err\n      })\n  }\n}\n\n// Delete Workout Session\nexport const cancelWorkoutSession = (id) => {\n  return (dispatch) => {\n    let data = {\n      method: \"get\",\n      url: `/workouts/delete?workoutId=${id}`,\n    }\n    return authApi(data)\n      .then((res) => {\n        dispatch({\n          type: WORKOUT.DELETE_SESSION,\n          payload: id,\n        })\n      })\n      .catch((err) => {\n        throw {}\n      })\n  }\n}\n","import * as WorkoutActions from \"./actions\"\r\n\r\nexport default {\r\n\t...WorkoutActions\r\n}","module.exports = __webpack_public_path__ + \"static/media/IndoorBike.f6396718.svg\";","module.exports = __webpack_public_path__ + \"static/media/Elliptical.f7c584bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/IndoorRun.0c644ab5.svg\";","module.exports = __webpack_public_path__ + \"static/media/IndoorWalk.fce581d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/HIITWorkout.4f11df4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/core.d9b42664.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.4ea2a983.svg\";","module.exports = __webpack_public_path__ + \"static/media/pilate.ba23e632.svg\";","module.exports = __webpack_public_path__ + \"static/media/kick.20142089.svg\";","module.exports = __webpack_public_path__ + \"static/media/yoga.6deb0dd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/dance.a3f995a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/jumping-rope.5044a305.svg\";","module.exports = __webpack_public_path__ + \"static/media/weight.8442cfad.svg\";","import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { ToastContainer, toast } from \"react-toastify\"\nimport {\n  CLink,\n  CRow,\n  CCol,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CInput,\n} from \"@coreui/react\"\nimport CIcon from \"@coreui/icons-react\"\nimport Select from \"react-select\"\nimport CounterInput from \"react-counter-input\"\nimport { DatePicker, Slider } from \"antd\"\nimport moment from \"moment\"\nimport { Formik } from \"formik\"\n\nimport WorkoutActions from \"services/workouts\"\n\nimport CLoader from \"components/CLoader\"\n\nimport object from \"yup/lib/object\"\nimport string from \"yup/lib/string\"\nimport array from \"yup/lib/array\"\nimport number from \"yup/lib/number\"\n\nimport \"./style.scss\"\n\nimport IndoorBike from \"assets/img/IndoorBike.svg\"\nimport Elliptical from \"assets/img/Elliptical.svg\"\nimport IndoorRun from \"assets/img/IndoorRun.svg\"\nimport IndoorWalk from \"assets/img/IndoorWalk.svg\"\nimport HIITWorkout from \"assets/img/HIITWorkout.svg\"\nimport Core from \"assets/img/core.svg\"\nimport Cross from \"assets/img/cross.svg\"\nimport Pilate from \"assets/img/pilate.svg\"\nimport Kick from \"assets/img/kick.svg\"\nimport Yoga from \"assets/img/yoga.svg\"\nimport Dance from \"assets/img/dance.svg\"\nimport JumpingRope from \"assets/img/jumping-rope.svg\"\nimport Weight from \"assets/img/weight.svg\"\n\nconst Yup = {\n  object,\n  string,\n  array,\n  number,\n  ref: () => {},\n}\n\nconst validationSchema = Yup.object().shape({\n  totalUserLimit: Yup.number(),\n  duration: Yup.number().required(\"Please select duration\"),\n  timezone: Yup.string().required(\"Please select timezone\"),\n  perUserCharge: Yup.number(),\n  scheduledTime: Yup.number().required(\"Host time is required\"),\n  requirement: Yup.string(),\n  typeDetails: Yup.string().required(\"Please select workout\"),\n})\n\nconst WORKOUT_TYPES = {\n  \"Indoor Bike\": IndoorBike,\n  Elliptical: Elliptical,\n  \"Indoor Run\": IndoorRun,\n  \"Indoor Walk\": IndoorWalk,\n  \"Jump Rope\": JumpingRope,\n  \"HIIT Workout\": HIITWorkout,\n  Dance: Dance,\n  Boxing: Kick,\n  \"Weight Training\": Weight,\n  \"Core Training\": Core,\n  \"Cross Training\": Cross,\n  Yoga: Yoga,\n  Pilates: Pilate,\n}\n\nconst TIME_OPTIONS = [\n  { label: \"30 min\", value: 30 },\n  { label: \"60 min\", value: 60 },\n  { label: \"90 min\", value: 90 },\n]\n\nconst TIMEZONES = [\n  { label: \"Central Daylight Time Chicago (GMT-5)\", value: \"CDT\" },\n  { label: \"Mountain Daylight Time Denver(GMT-6)\", value: \"MDT\" },\n  { label: \"Mountain Standard Time Phoenix (GMT-7)\", value: \"MST\" },\n  { label: \"Pacific Daylight Time Los Angeles (GMT-7)\", value: \"PDT\" },\n  { label: \"Alaska Daylight Time Anchorage (GMT-8)\", value: \"ADT\" },\n  { label: \"Hawaii-Aleutian Standard Time Honolulu(GMT-10)\", value: \"HAST\" },\n]\n\nconst CHARGE_MARKS = {\n  10: \"$10\",\n  15: \"$15\",\n  20: \"$20\",\n  25: \"$25\",\n  30: \"$30\",\n  35: \"$35\",\n  40: \"$40\",\n  45: \"$45\",\n  50: \"$50\",\n  55: \"$55\",\n  60: \"$60\",\n}\n\nconst WorkoutItem = ({ selected, onSelect, icon, title }) => (\n  <div\n    className={`workout-item mx-2 p-3 mb-3 text-center ${selected && \"active\"}`}\n    onClick={() => onSelect(title)}\n  >\n    <img src={icon} width=\"80\" />\n    <p className=\"mb-0 mt-2\">{title}</p>\n  </div>\n)\n\nconst WorkoutPage = (props) => {\n  const dispatch = useDispatch()\n  const workoutId = props.match.params.id\n\n  const [loading, setLoading] = useState(false)\n  const [saving, setSaving] = useState(false)\n  const [selectedWorkout, setWorkout] = useState(null)\n\n  const [initialValues, setInitialValues] = useState({\n    totalUserLimit: \"1\",\n    duration: \"\",\n    timezone: \"\",\n    perUserCharge: 10,\n    scheduledTime: parseInt(moment(new Date()).format(\"x\")),\n    requirement: \"\",\n    typeDetails: \"\",\n  })\n\n  useEffect(() => {\n    // setLoading(true)\n    // getUserProfile()\n\n    if (workoutId) {\n      setLoading(true)\n      dispatch(WorkoutActions.getWorkoutById(workoutId))\n        .then((res) => {\n          const workout = res\n\n          setInitialValues(workout)\n          setLoading(false)\n          setWorkout(workout.typeDetails)\n        })\n        .catch((err) => {\n          setLoading(false)\n        })\n    }\n  }, [])\n\n  const handleSubmit = (values) => {\n    setSaving(true)\n    dispatch(\n      WorkoutActions.createOrSaveWorkout(\n        {\n          ...values,\n          totalUserLimit: parseInt(values.totalUserLimit),\n          duration: parseInt(values.duration),\n          perUserCharge: parseInt(values.perUserCharge),\n          scheduledTime: parseInt(values.scheduledTime),\n        },\n        workoutId\n      )\n    )\n      .then((res) => {\n        setSaving(false)\n        toast.success(\n          `Workout is ${workoutId ? \"updated\" : \"created\"} successfully!`,\n          {\n            position: toast.POSITION.TOP_RIGHT,\n          }\n        )\n        props.history.push(\"/user/profile\")\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong. Please try again!\", {\n          position: toast.POSITION.TOP_RIGHT,\n        })\n        setSaving(false)\n      })\n  }\n\n  const disabledDate = (current) => {\n    return current && current <= moment().endOf(\"day\")\n  }\n\n  if (loading)\n    return (\n      <div\n        className=\"d-flex justify-content-center align-items-center\"\n        style={{ height: 500 }}\n      >\n        <CLoader color=\"#5063EE\" width=\"50\" height=\"50\" type=\"TailSpin\" />\n      </div>\n    )\n\n  return (\n    <div className=\"workout-page p-4\">\n      <CRow>\n        <CCol xs=\"12\">\n          <div className=\"bg-primary border-radius p-3 text-center mb-4\">\n            <h2 className=\"text-white mb-1\">\n              <b>Let’s change lives</b>\n            </h2>\n            <p className=\"mb-0\">Let’s change lives , Let’s change lives </p>\n          </div>\n        </CCol>\n        <CCol xs={12} className=\"px-5\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n          >\n            {({ handleSubmit, handleChange, values, errors, touched }) => (\n              <CForm onSubmit={handleSubmit} className=\"profile-form mx-auto\">\n                <CLabel className=\"text-primary mb-3 px-2\">\n                  <b>How do you wanna burn it. (Select one):</b>\n                </CLabel>\n                <CFormGroup className=\"mb-3\">\n                  <div className=\"d-flex flex-wrap \">\n                    {Object.keys(WORKOUT_TYPES).map((key) => (\n                      <WorkoutItem\n                        key={key}\n                        title={key}\n                        icon={WORKOUT_TYPES[key]}\n                        selected={selectedWorkout === key}\n                        onSelect={(val) => {\n                          setWorkout(val)\n                          handleChange(\"typeDetails\")(val)\n                        }}\n                      />\n                    ))}\n                  </div>\n                  {errors.typeDetails && touched.typeDetails && (\n                    <div className=\"invalid-feedback\">{errors.typeDetails}</div>\n                  )}\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol lg={4} className=\"mb-3\">\n                    <CLabel className=\"text-primary\">\n                      <b>What would user need? </b>\n                    </CLabel>\n                    <CInput\n                      style={{ height: 38 }}\n                      id=\"requirement\"\n                      name=\"requirement\"\n                      placeholder=\"For example A yoga mat\"\n                      value={values.requirement}\n                      onChange={handleChange}\n                    />\n                  </CCol>\n                  <CCol lg={4} className=\"mb-3 counter-input\">\n                    <CLabel className=\"text-primary\">\n                      <b>How many people you wanna in this sessions</b>\n                    </CLabel>\n                    <CounterInput\n                      min={1}\n                      max={10}\n                      count={parseInt(values.totalUserLimit)}\n                      inputStyle={{\n                        minWidth: 80,\n                        height: 37,\n                        border: \"none\",\n                        backgroundColor: \"white\",\n                      }}\n                      wrapperStyle={{\n                        border: \"1px solid #d8dbe0\",\n                        borderRadius: 3,\n                        height: 38,\n                        width: \"fit-content\",\n                      }}\n                      btnStyle={{\n                        backgroundColor: \"#5063EE\",\n                        color: \"white\",\n                        borderRadius: 3,\n                        padding: \"8px 12px\",\n                      }}\n                      onCountChange={(count) =>\n                        handleChange(\"totalUserLimit\")(count.toString())\n                      }\n                    />\n                  </CCol>\n                  <CCol lg={4} className=\"mb-3\">\n                    <CLabel className=\"text-primary\">\n                      <b>How much each participant should pay?</b>\n                    </CLabel>\n                    <Slider\n                      marks={CHARGE_MARKS}\n                      max={60}\n                      min={10}\n                      defaultValue={values.perUserCharge}\n                      onChange={(val) =>\n                        handleChange(\"perUserCharge\")(val.toString())\n                      }\n                    />\n                  </CCol>\n                </CFormGroup>\n\n                <CFormGroup row>\n                  <CCol lg={4} className=\"mb-3\">\n                    <CLabel className=\"text-primary\">\n                      <b>When do you wanna host? </b>\n                    </CLabel>\n                    <DatePicker\n                      className=\"w-100\"\n                      style={{ height: 38 }}\n                      format=\"YYYY-MM-DD HH:mm:ss\"\n                      disabledDate={disabledDate}\n                      defaultValue={moment(new Date(values.scheduledTime))}\n                      onChange={(date) => {\n                        console.log(date)\n                        handleChange(\"scheduledTime\")(date?date.format(\"x\"):'')\n                      }}\n                      showTime={{ defaultValue: moment(\"00:00:00\", \"HH:mm:ss\") }}\n                    />\n                    {errors.scheduledTime && touched.scheduledTime && (\n                      <div className=\"invalid-feedback\">{errors.scheduledTime}</div>\n                    )}\n                  </CCol>\n                  <CCol lg={4} className=\"mb-3\">\n                    <CLabel className=\"text-primary\">\n                      <b>Your Timezone?</b>\n                    </CLabel>\n                    <Select\n                      id=\"timezone\"\n                      placeholder=\"\"\n                      options={TIMEZONES}\n                      classNamePrefix={\"react-select\"}\n                      isSearchable={false}\n                      defaultValue={\n                        TIMEZONES.filter((tz) => tz.value === values.timezone)[0]\n                      }\n                      onChange={(val) => {\n                        handleChange(\"timezone\")(val.value)\n                      }}\n                    ></Select>\n                    {errors.timezone && touched.timezone && (\n                      <div className=\"invalid-feedback\">{errors.timezone}</div>\n                    )}\n                  </CCol>\n                  <CCol lg={4} className=\"mb-3\">\n                    <CLabel className=\"text-primary\">\n                      <b>How long you gonna sweat?(Min)</b>\n                    </CLabel>\n                    <Select\n                      id=\"duration\"\n                      options={TIME_OPTIONS}\n                      placeholder=\"\"\n                      classNamePrefix={\"react-select\"}\n                      defaultValue={\n                        TIME_OPTIONS.filter((tz) => tz.value === values.duration)[0]\n                      }\n                      isSearchable={false}\n                      onChange={(val) => {\n                        handleChange(\"duration\")(val.value.toString())\n                      }}\n                    ></Select>\n                    {errors.duration && touched.duration && (\n                      <div className=\"invalid-feedback\">{errors.duration}</div>\n                    )}\n                  </CCol>\n                </CFormGroup>\n\n                <div className=\"d-flex flex-wrap justify-content-end mt-5 mb-3\">\n                  <CButton\n                    color=\"primary\"\n                    type=\"submit\"\n                    className=\"px-4 mx-2 btn-pill button-bg-dark text-bold mt-3 d-flex align-items-center justify-content-center box-shadow\"\n                    style={{ width: 180, height: 40 }}\n                  >\n                    {saving ? (\n                      <CLoader />\n                    ) : workoutId ? (\n                      \"UPDATE SESSION\"\n                    ) : (\n                      \"CREATE SESSION\"\n                    )}\n                  </CButton>\n\n                  <Link to={\"/user/profile\"}>\n                    <CButton\n                      color=\"secondary\"\n                      type=\"button\"\n                      className=\"ml-2 px-4 btn-pill text-bold mt-3 d-flex align-items-center justify-content-center box-shadow\"\n                      disabled={loading}\n                      style={{ width: 180, height: 40 }}\n                    >\n                      × CANCEL\n                    </CButton>\n                  </Link>\n                </div>\n              </CForm>\n            )}\n          </Formik>\n        </CCol>\n      </CRow>\n    </div>\n  )\n}\n\nexport default WorkoutPage\n"],"sourceRoot":""}